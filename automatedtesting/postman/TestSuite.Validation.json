{
	"info": {
		"_postman_id": "24fcec20-22c3-4c03-b533-36cabc298849",
		"name": "ValidationTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11095147"
	},
	"item": [
		{
			"name": "Create Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();",
							"pm.test(\"Successful Update Author\", function () {",
							"    pm.expect(json.FirstName).to.eq(pm.environment.get(\"firstName\"));",
							"    pm.expect(json.LastName).to.eq(pm.environment.get(\"lastName\"));",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/{{path}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"jsonData.sort((a, b) => a.ID - b.ID);",
							"const expectedNumber = jsonData.length;",
							"pm.test(`Found ${expectedNumber} Authors`, function () {",
							"    pm.expect(jsonData.length).to.eq(expectedNumber);",
							"    for (i = 0; i < expectedNumber; i++) {",
							"        pm.expect(jsonData[i].ID).to.eq(i+1)",
							"    }",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{path}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Author By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Author with ID 10 is as expected\", () => {",
							"    pm.expect(jsonData.ID).to.eql(10);",
							"    pm.expect(jsonData.FirstName).to.eql(\"First Name 10\");",
							"    pm.expect(jsonData.LastName).to.eql(\"Last Name 10\");",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{path}}/{{id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authors a Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"const len = jsonData.length;",
							"pm.test(`Book with ID 1 has ${len} authors`, () => {",
							"    pm.expect(jsonData.length).to.eql(len);",
							"    for (i = 0; i < len; i++) {",
							"        pm.expect(jsonData[i].ID).to.eq(i+1)",
							"    }",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{author_book_path}}/{{book_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{author_book_path}}",
						"{{book_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();",
							"pm.test(\"Successful Update\", function () {",
							"    pm.response.to.have.status(200)",
							"    pm.expect(json.FirstName).to.eq(pm.environment.get(\"firstName_update\"));",
							"    pm.expect(json.LastName).to.eq(pm.environment.get(\"lastName_update\"));",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{firstName_update}}\",\n    \"lastName\": \"{{lastName_update}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/{{path}}/{{id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful Delete\", function () {",
							"    pm.response.to.have.status(200)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/{{path}}/{{id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}